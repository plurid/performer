FROM node:12-alpine AS builder


WORKDIR /app


COPY . .


ENV ENV_MODE production
ENV NODE_ENV production


RUN yarn install --production false --network-timeout 1000000


RUN yarn build.production




FROM node:12-alpine


ARG PORT=56065

ARG PERFORMER_QUIET=false
ARG PERFORMER_LOG_LEVEL=7

ARG DOCKER_AUTH_USERNAME
ARG DOCKER_AUTH_PASSWORD
ARG DOCKER_AUTH_SERVER_ADDRESS

ARG PERFORMER_DATABASE_TYPE
ARG PERFORMER_STORAGE_TYPE
ARG PERFORMER_STORAGE_BUCKET
ARG PERFORMER_STORAGE_ROOT_PATH
ARG PERFORMER_BASE_PATH

ARG PERFORMER_AWS_API_VERSION
ARG PERFORMER_AWS_REGION
ARG PERFORMER_AWS_ACCESS_KEY_ID
ARG PERFORMER_AWS_SECRET_ACCESS_KEY

ARG GOOGLE_APPLICATION_CREDENTIALS

ARG PERFORMER_CUSTOM_LOGIC

ARG PERFORMER_PRIVATE_USAGE
ARG PERFORMER_PRIVATE_OWNER_IDENTONYM
ARG PERFORMER_PRIVATE_OWNER_KEY
ARG PERFORMER_PRIVATE_TOKEN

ARG PERFORMER_IN_CONTAINER_USAGE
ARG PERFORMER_IN_CONTAINER_HOST_BIND

ARG USE_DELOG
ARG DELOG_GROUND_LEVEL
ARG DELOG_FORMAT
ARG DELOG_ENDPOINT
ARG DELOG_TOKEN
ARG DELOG_PROJECT
ARG DELOG_SPACE


WORKDIR /app


ENV ENV_MODE production
ENV NODE_ENV production

ENV PORT=$PORT

ENV PERFORMER_QUIET=$PERFORMER_QUIET
ENV PERFORMER_LOG_LEVEL=$PERFORMER_LOG_LEVEL

ENV DOCKER_AUTH_USERNAME=$DOCKER_AUTH_USERNAME
ENV DOCKER_AUTH_PASSWORD=$DOCKER_AUTH_PASSWORD
ENV DOCKER_AUTH_SERVER_ADDRESS=$DOCKER_AUTH_SERVER_ADDRESS

ENV PERFORMER_DATABASE_TYPE=$PERFORMER_DATABASE_TYPE
ENV PERFORMER_STORAGE_TYPE=$PERFORMER_STORAGE_TYPE
ENV PERFORMER_STORAGE_BUCKET=$PERFORMER_STORAGE_BUCKET
ENV PERFORMER_STORAGE_ROOT_PATH=$PERFORMER_STORAGE_ROOT_PATH
ENV PERFORMER_BASE_PATH=$PERFORMER_BASE_PATH

ENV PERFORMER_AWS_API_VERSION=$PERFORMER_AWS_API_VERSION
ENV PERFORMER_AWS_REGION=$PERFORMER_AWS_REGION
ENV PERFORMER_AWS_ACCESS_KEY_ID=$PERFORMER_AWS_ACCESS_KEY_ID
ENV PERFORMER_AWS_SECRET_ACCESS_KEY=$PERFORMER_AWS_SECRET_ACCESS_KEY

ENV GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS

ENV PERFORMER_CUSTOM_LOGIC=$PERFORMER_CUSTOM_LOGIC

ENV PERFORMER_PRIVATE_USAGE=$PERFORMER_PRIVATE_USAGE
ENV PERFORMER_PRIVATE_OWNER_IDENTONYM=$PERFORMER_PRIVATE_OWNER_IDENTONYM
ENV PERFORMER_PRIVATE_OWNER_KEY=$PERFORMER_PRIVATE_OWNER_KEY
ENV PERFORMER_PRIVATE_TOKEN=$PERFORMER_PRIVATE_TOKEN

ENV PERFORMER_IN_CONTAINER_USAGE=$PERFORMER_IN_CONTAINER_USAGE
ENV PERFORMER_IN_CONTAINER_HOST_BIND=$PERFORMER_IN_CONTAINER_HOST_BIND

ENV USE_DELOG=$USE_DELOG
ENV DELOG_GROUND_LEVEL=$DELOG_GROUND_LEVEL
ENV DELOG_FORMAT=$DELOG_FORMAT
ENV DELOG_ENDPOINT=$DELOG_ENDPOINT
ENV DELOG_TOKEN=$DELOG_TOKEN
ENV DELOG_PROJECT=$DELOG_PROJECT
ENV DELOG_SPACE=$DELOG_SPACE


RUN apk add git
RUN apk add docker


COPY --from=builder /app/package.json ./
COPY --from=builder /app/build ./build
COPY --from=builder /app/scripts ./scripts


RUN yarn install --production --network-timeout 1000000


CMD ["yarn", "start"]
